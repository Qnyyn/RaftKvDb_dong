//raft节点之间的通信

syntax = "proto3";

package raftRpcProtoc;

option cc_generic_services = true;

message LogEntry{
    bytes Command = 1;
    int32 LogTerm = 2;
    int32 LogIndex = 3;
}

//leader追加日志条目
message AppendEntriesArgs{
    int32 Term = 1;
    int32 LeaderId = 2;
    int32 PrevLogIndex = 3;
    int32 PrevLogTerm = 4;
    repeated LogEntry Entries = 5;
    int32 LeaderCommit = 6;
}

//返回结果
message AppendEntriesReply{
    int32 Term = 1; //leader的term 可能由follower不同
    bool success = 2;
    int32 UpdateNextIndex = 3;
    int32 AppState = 4;
}

//candidate 请求投票
message RequestVoteArgs{
    int32 Term = 1;
    int32 CandidateId = 2;
    int32 LastLogIndex = 3;
    int32 LastLogTerm = 4;
}

message RequestVoteReply{
    int32 Term = 1;
    bool VoteGranted = 2;
    int32 VoteState = 3;
}

message InstallSnapshotRequest  {
	int32 LeaderId                 =1;
	int32 Term                     =2;
	int32 LastSnapShotIncludeIndex =3;
	int32 LastSnapShotIncludeTerm  =4;
	bytes Data                     =5;//快照信息，当然是用bytes来传递
}

// InstallSnapshotResponse 只用返回Term，因为对于快照只要Term是符合的就是无条件接受的
message InstallSnapshotResponse  {
	int32 Term  = 1;
}

service raftRpc{
    rpc AppendEntries(AppendEntriesArgs) returns(AppendEntriesReply);
    rpc RequestVote(RequestVoteArgs) returns(RequestVoteReply);
    rpc InstallSnapshot(InstallSnapshotRequest) returns(InstallSnapshotResponse);
}